import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

plugins { id 'com.android.library' }

// Copy header and set cmake root dir
def cppPath = Paths.get(projectDir.absolutePath, 'src', 'main', 'cpp').toFile().absolutePath
def cmakeDir = new File(projectDir.absolutePath, '.cxx')
def cmakeOutputDir = new File(cmakeDir, 'cmake')
def includeDir = new File(cmakeDir, 'include')
def includePath = includeDir.absolutePath

if (!cmakeDir.exists()) cmakeDir.mkdirs()
if (!cmakeOutputDir.exists()) cmakeOutputDir.mkdirs()
if (!includeDir.exists()) includeDir.mkdirs()

Files.copy(
        Paths.get(cppPath, "png.h"),
        Paths.get(includePath, "png.h"),
        StandardCopyOption.REPLACE_EXISTING
)

Files.copy(
        Paths.get(cppPath, "pngconf.h"),
        Paths.get(includePath, "pngconf.h"),
        StandardCopyOption.REPLACE_EXISTING
)

Files.copy(
        Paths.get(cppPath, 'scripts', 'pnglibconf.h.prebuilt'),
        Paths.get(includePath, "pnglibconf.h"),
        StandardCopyOption.REPLACE_EXISTING
)

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 10637
        versionName "1.6.37"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild { cmake { cppFlags "-std=c++17" } }
    }

    buildFeatures {
        prefabPublishing = true
    }

    prefab {
        png_static {
            headers includePath
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
            buildStagingDirectory cmakeOutputDir.absolutePath
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {}